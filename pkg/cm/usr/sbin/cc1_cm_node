#!/usr/bin/python
# -*- coding: utf-8 -*-
# @cond LICENSE
#
# Copyright [2010-2013] Institute of Nuclear Physics PAN, Krakow, Poland
#
# Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# @endcond LICENSE

"""
@author Maciej Nabozny <mn@mnabozny.pl>
"""


import subprocess
import sys
import os
import pwd, grp

try:
    sys.path.append('/usr/lib/cc1/')
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "cm.settings")

    from cm.models.node import Node
    from common.states import node_states
except:
    print "Cannot import CM database model. Probably unconfigured!"
    sys.exit(1)


def start():
    nodes = Node.objects.all()
    for node in nodes:
        if node.state != node_states['locked']:
            node.state = node_states['offline']
            node.save()

    for node in nodes:
        if node.state != node_states['locked']:
            subprocess.call(['ssh', '%s@%s' % (node.username, node.address), 'sudo /etc/init.d/cc1-node start'])


def node_exec(cmd, state="all"):
    nodes = []
    if state == "all":
        nodes = Node.objects.all()
    else:
        nodes = Node.objects.filter(state=node_states[state]).all()

    for node in nodes:
        if node.state != node_states['locked']:
            subprocess.call(['ssh', '%s@%s' % (node.username, node.address), cmd])

if __name__ == "__main__":
    uid_cc1 = pwd.getpwnam('cc1').pw_uid
    gid_cc1 = grp.getgrnam('cc1').gr_gid
    gid_kvm = grp.getgrnam('kvm').gr_gid
    gid_libvirt = grp.getgrnam('libvirt').gr_gid

    if os.getuid() == 0:
        os.environ['HOME'] = '/var/lib/cc1/'

        os.setgroups([gid_cc1, gid_kvm, gid_libvirt])
        os.setregid(gid_cc1, gid_cc1)
        os.setreuid(uid_cc1, uid_cc1)
    elif os.getuid() != uid_cc1:
        print "Run this tool as cc1 or root user!"
        sys.exit(1)

    if len(sys.argv) == 2 and sys.argv[1] == "start":
        sys.exit(start())
    elif len(sys.argv) >= 4 and sys.argv[1] == "node_exec":
        sys.exit(node_exec(" ".join(sys.argv[3:]), sys.argv[2]))
    else:
        print "Usage: %s [start]" % sys.argv[0]
        print "       %s [node_exec] [node_state] command..." % sys.argv[0]
        print "       node_exec executes command on all nodes in given state."
        print "       Available states:"
        for state in node_states.keys():
            print "        * %s" % state
        sys.exit(1)
