#!/usr/bin/python
# -*- coding: utf-8 -*-
# @cond LICENSE
#
# Copyright [2010-2013] Institute of Nuclear Physics PAN, Krakow, Poland
#
# Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# @endcond LICENSE

"""
@author Maciej Nabozny <mn@mnabozny.pl>
"""

import subprocess
import os
import sys
import pwd
import grp

def create():
    dev_null = open('/dev/null', 'w')
    
    print "COMMON: Adding user..."
    try:
        g = grp.getgrnam('cc1')
        u = pwd.getpwnam("cc1")
        if u.pw_uid != 331:
            print "\tERROR: User cc1 exists! Uid: %d" % u.pw_uid
            return 1
        elif g.gr_gid != 331:
            print "\tERROR: Group cc1 exists! UGid: %d" % g.gr_gid
            return 1
    except:
        if subprocess.call('groupadd -g 331 cc1', shell=True) != 0:
            print "\tERROR: Cannot add group cc1"
            return 2
        if subprocess.call('useradd -s /bin/bash -d /var/lib/cc1/ -g 331 -u 331 cc1', shell=True) != 0:
            print "\tERROR: Cannot add user cc1"
            return 2

    print "COMMON: Adding user to groups..."
    subprocess.call('usermod -a -G kvm cc1', shell=True, stdout=dev_null)
    subprocess.call('usermod -a -G libvirt cc1', shell=True, stdout=dev_null)
    subprocess.call('usermod -a -G libvirtd cc1', shell=True, stdout=dev_null)
    subprocess.call('usermod -a -G cc1 libvirt-qemu', shell=True, stdout=dev_null)

    print "COMMON: Configuring home..."
    os.chmod('/var/lib/cc1/', 0755)
    os.chmod('/var/lib/cc1/.ssh', 0700)
    os.chmod('/var/lib/cc1/.ssh/config', 0600)
    
    print "COMMON: Generating ssh keys..."
    if not os.path.exists("/var/lib/cc1/.ssh/id_rsa"):
        subprocess.call("ssh-keygen -t rsa -f /var/lib/cc1/.ssh/id_rsa -N ''", shell=True)
    else:
        print "\tWARNING: private key exists"
    subprocess.call("cat /var/lib/cc1/.ssh/id_rsa.pub >> /var/lib/cc1/.ssh/authorized_keys", shell=True)
    os.chown('/var/lib/cc1/.ssh/id_rsa.pub', 331, 331)
    os.chown('/var/lib/cc1/.ssh/id_rsa', 331, 331)
    
    return 0

def remove():
    subprocess.call('userdel cc1', shell=True)
    subprocess.call('groupdel cc1', shell=True)
    
    return 0

def purge():
    remove()
    try:
        os.remove('/var/lib/cc1/.ssh/id_rsa')
    except:
        print "COMMON: Private key doesnt exists"
        
    try:
        os.remove('/var/lib/cc1/.ssh/id_rsa.pub')
    except:
        print "COMMON: Public key doesnt exists"
    
    return 0


if __name__ == "__main__":
    if len(sys.argv) == 2 and sys.argv[1] == 'create':
        sys.exit(create())
    elif len(sys.argv) == 2 and sys.argv[1] == 'remove':
        sys.exit(remove())
    elif len(sys.argv) == 2 and sys.argv[1] == 'purge':
        sys.exit(purge())
    else:
        print "Usage: %s [create|remove|purge]" % sys.argv[0]
        sys.exit(1)

