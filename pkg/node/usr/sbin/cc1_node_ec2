#!/usr/bin/python
# -*- coding: utf-8 -*-
# @cond LICENSE
#
# Copyright [2010-2013] Institute of Nuclear Physics PAN, Krakow, Poland
#
# Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# @endcond LICENSE

"""
@author Maciej Nabozny <mn@mnabozny.pl>
"""


import subprocess
import urllib2
import sys
import imp
import os

try:
    network_config = imp.load_source('network_config', '/etc/cc1/common-networking/config.py')
    cm_address = network_config.cm_cluster_address
except:
    print "ERROR: First, configure this node from CM (command cc1_cm_setup_node)"
    sys.exit(1)


def get_interface():
    routes = open('/proc/net/route', 'r')
    lines = routes.readlines()
    for line in lines:
        fields = line.split('\t')
        if fields[1] == '00000000':
            return fields[0]


def start():
    null = open('/dev/null', 'w')
    cm_url = urllib2.urlparse.urlsplit(cm_address)

    # Remove (if exists) redirection to public ip
    subprocess.call(['/sbin/iptables', '-t', 'nat', '-D', 'PREROUTING', '-d', '169.254.169.254', '-p', 'tcp', '--dport' , '80', '-j', 'DNAT', '--to', '%s:8009' % cm_url.hostname], stderr=null)
    #subprocess.call(['/sbin/iptables', '-t', 'nat', '-D', 'POSTROUTING', '-s', cm_url.hostname, '-j', 'SNAT', '--to-source', '169.254.169.254'], stderr=null)

    # Add new redirections and interface
    subprocess.call(['/sbin/iptables', '-t', 'nat', '-I', 'PREROUTING', '-d', '169.254.169.254', '-p', 'tcp', '--dport' , '80', '-j', 'DNAT', '--to', '%s:8009' % cm_url.hostname], stderr=null)
    #subprocess.call(['/sbin/iptables', '-t', 'nat', '-I', 'POSTROUTING', '-s', cm_url.hostname, '-j', 'SNAT', '--to-source', '169.254.169.254'], stderr=null)
    subprocess.call(['/sbin/ifconfig',  '%s:ctx' % get_interface(),  '169.254.169.254',  'up'])

    subprocess.call(['sysctl', '-w', 'net.ipv4.ip_forward=1'])

    null.close()


def stop():
    null = open('/dev/null', 'w')
    cm_url = urllib2.urlparse.urlsplit(cm_address)

    # Remove (if exists) redirection to public ip
    subprocess.call(['/sbin/iptables', '-t', 'nat', '-D', 'PREROUTING', '-d', '169.254.169.254', '-p', 'tcp', '--dport' , '80', '-j', 'DNAT', '--to', '%s:8009' % cm_url.hostname], stderr=null)
    subprocess.call(['/sbin/iptables', '-t', 'nat', '-D', 'POSTROUTING', '-s', cm_url.hostname, '-j', 'SNAT', '--to-source', '169.254.169.254'], stderr=null)

    subprocess.call(['/sbin/ifconfig',  '%s:ctx' % get_interface(),  'down'])

    null.close()


if __name__ == "__main__":
    if os.getuid() != 0:
        print "Run this tool as root!"
        sys.exit(0)

    if len(sys.argv) == 2 and sys.argv[1] == 'start':
        sys.exit(start())
    elif len(sys.argv) == 2 and sys.argv[1] == 'stop':
        sys.exit(stop())
    else:
        print "Usage: %s [start|stop]" % sys.argv[0]
        exit(1)

